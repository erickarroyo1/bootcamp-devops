pipeline {
    agent any
    environment {
        EC2INSTANCE = 'ec2-user@ec2-54-216-200-230.eu-west-1.compute.amazonaws.com'
        APPNAME = 'python-app-demo'
        REGISTRY = '191006'
        DOCKER_HUB_LOGIN = credentials('docker-hub')
    }

    stages {
        stage('Git Clone') {
            steps {
                sh 'rm -rf bootcamp-devops'
                sh 'git clone https://github.com/erickarroyo1/bootcamp-devops.git'
                sh 'ls -lrt Jenkis-eduit-DevOps/'
            }
        } 
        stage('Test') {
            steps {
                echo 'Stage Test'
            }
        }
        stage('Build') {
            steps {
                echo 'Stage Build'
                sh 'docker build -t ${APPNAME}:${BUILD_NUMBER} -f Jenkis-eduit-DevOps/Dockerfile .'
                sh 'docker tag ${APPNAME}:${BUILD_NUMBER} ${REGISTRY}/${APP_NAME}:${BUILD_NUMBER}'
            }
        }
        stage('Push to Registry') {
            steps {
                echo 'Stage Push'
                sh 'docker login --username=$DOCKER_HUB_LOGIN_USR --password=$DOCKER_HUB_LOGIN_PSW'
                sh 'docker push ${REGISTRY}/${APP_NAME}:${BUILD_NUMBER}'
                
            }
        }
        stage('Deploy') {
            steps {
                echo 'Stage Deploy'
                sh ("sed -i -- 's/REGISTRY/$REGISTRY/g' Jenkis-eduit-DevOps/docker-compose.yml")
                sh ("sed -i -- 's/APPNAME/$APPNAME/g' Jenkis-eduit-DevOps/docker-compose.yml")
                sh ("sed -i -- 's/TAG/$BUILD_NUMBER/g' Jenkis-eduit-DevOps/docker-compose.yml")
                sshagent(['ssh-ec2']){
                 sh 'sudo scp -o StrictHostKeyChecking=no docker-compose.yml ${EC2INSTANCE}:/home/ec2-user' 
                 sh 'sudo ssh ${EC2INSTANCE} ls -lrt'
                 sh 'sudo ssh ${EC2INSTANCE} docker-compose up -d'
                }
            }
        }
        stage('Notification') {
            steps {
                echo 'Stage Notify'
            }
        }
    }
}