--- #Vote Service
  apiVersion: v1
  kind: Service
  metadata:
    name: redis-cluster-service
  spec:
    type: NodePort
  #  selector:
  #    app: vote-deployment
    ports:
      - name: client
        port: 6379
        targetPort: 6379
      - name: gossip
        port: 16379
        targetPort: 16379

--- #PVC redis01

  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: redis01
  spec:
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    hostPath:
      path: "/redis01"

--- #PVC redis02

  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: redis02
  spec:
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    hostPath:
      path: "/redis02"

--- #PVC redis03

  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: redis03
  spec:
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    hostPath:
      path: "/redis03"

--- #PVC redis04

  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: redis04
  spec:
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    hostPath:
      path: "/redis04"


--- #PVC redis05

  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: redis05
  spec:
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    hostPath:
      path: "/redis05"

--- #PVC redis06

  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: redis06
  spec:
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    hostPath:
      path: "/redis06"

--- #StatefulSet Deployment




  apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: redis-cluster
  spec:
    serviceName: "redis-cluster-service"
    replicas: 6 # by default is 1
    selector:
      matchLabels:
        app: redis-cluster # has to match .spec.template.metadata.labels
    template:
      metadata:
        labels:
          app: redis-cluster # has to match .spec.selector.matchLabels
      spec:
        containers:
        - name: redis
          image: redis:5.0.1-alpine
          command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
          ports:
          - containerPort: 6379
            name: client
          - containerPort: 16379
            name: gossip
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
  #      initContainers:
  #        command:  ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
          volumeMounts:
          - name: conf
            mountPath: /conf
            readOnly: false
          - name: data
            mountPath: /data
            readOnly: false
        volumes:
        - name: conf
          configMap:
            name: redis-cluster-configmap
            defaultMode: 0755
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi